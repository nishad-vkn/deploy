if [ $# -eq 2 -a "$1" = "--delete" ]; then
    fqdn="$2"
    delete=1
else
    fqdn="$1"
    delete=0
fi

umask 0027
zonefile="@baseDir@/$fqdn.zone"

touchZonefile() {
    @touch@ -r "$zonefile" -d '1 sec' "$zonefile"
}

if [ -e "$zonefile" ]; then
    oldMTime="$(@stat@ -c %Y "$zonefile")"
    exists=1
else
    oldMTime=0
    exists=0
fi

if [ $delete -eq 1 ]; then
    if [ $exists -eq 1 ]; then
        @ctrl@ delzone "$fqdn"
        @rm@ -f "$zonefile"
        exit 0
    else
        echo "Zone file $zonefile doesn't exist." >&2
        exit 1
    fi
fi

zonedata="$(@cat@)"

if ! zoneErrors="$(echo "$zonedata" | @checkzone@ "$fqdn" - 2>&1)"; then
    echo "$zoneErrors" >&2
    exit 1
fi

echo "$zonedata" > "$zonefile"

if [ "$oldMTime" -eq "$(@stat@ -c %Y "$zonefile")" ]; then
    touchZonefile
fi

coproc waitForUpdate {
    @inotifywait@ --format %w -m -e close "$zonefile" 2>&1
}

watching=0

while read line <&${waitForUpdate[0]}; do
    if [ "x$line" = "xWatches established." ]; then
        watching=1
        break
    fi
done

if [ $watching -eq 0 ]; then
    kill -TERM %% &> /dev/null || :
    echo "Could not establish inotify watch for $zonefile!" >&2
    exit 1
fi

if [ $exists -eq 1 ]; then
    echo -n "Reloading zone $fqdn: " >&2
    @ctrl@ reload "$fqdn" >&2
else
    @ctrl@ addzone "$fqdn" dynzone
fi

for waitTime in 1 2 5 10 30; do
    if read -t $waitTime line <&${waitForUpdate[0]}; then
        if [ "x$line" = "x$zonefile" ]; then
            kill -TERM %% &> /dev/null || :
            wait &> /dev/null || :
            echo "Reload of $fqdn successful." >&2
            exit 0
        fi
    fi
    echo "Reload of $fqdn failed, touching zone file and" \
         "resending reload..." >&2
    touchZonefile
    read touched <&${waitForUpdate[0]}
    @ctrl@ reload "$fqdn" >&2
done
echo "Reloading of zone $fqdn failed after 5 retries." >&2
exit 1
